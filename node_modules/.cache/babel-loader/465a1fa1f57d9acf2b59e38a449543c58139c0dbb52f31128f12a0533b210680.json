{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-2xl font-bold mb-4\"\n}, \"Profile\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"max-w-xs mx-auto bg-white p-8 rounded-lg shadow-lg\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"text-lg font-semibold\"\n};\nconst _hoisted_6 = {\n  class: \"text-gray-600\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [$setup.user ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $setup.user.photo_url,\n    alt: \"Profile Photo\",\n    class: \"w-full rounded-full mb-4\"\n  }, null, 8 /* PROPS */, _hoisted_3)) : _createCommentVNode(\"v-if\", true), $setup.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString($setup.authStore.username), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString($setup.user.email), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["_createElementVNode","class","key","_createElementBlock","_hoisted_1","_hoisted_2","$setup","user","src","photo_url","alt","_hoisted_3","_createCommentVNode","_hoisted_4","_hoisted_5","_toDisplayString","authStore","username","_hoisted_6","email"],"sources":["/Users/deolorensa/vue/tech--gamatecha/src/views/ProfileView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1 class=\"text-2xl font-bold mb-4\">Profile</h1>\n    <div class=\"max-w-xs mx-auto bg-white p-8 rounded-lg shadow-lg\">\n      <img\n        v-if=\"user\"\n        :src=\"user.photo_url\"\n        alt=\"Profile Photo\"\n        class=\"w-full rounded-full mb-4\"\n      />\n      <div v-if=\"user\">\n        <p class=\"text-lg font-semibold\">{{ authStore.username }}</p>\n        <p class=\"text-gray-600\">{{ user.email }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useAuthStore } from \"../stores/auth\";\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  setup() {\n    const authStore = useAuthStore();\n    const user = ref(null);\n\n    // Fetch user profile data on component mount\n    onMounted(async () => {\n      try {\n        // You should have an API endpoint to fetch user profile data\n        // Replace this with your actual API endpoint\n        const response = await fetchUserProfile(); // Implement this function to fetch user profile\n        user.value = response.data; // Assuming response.data contains user profile data\n      } catch (error) {\n        console.error(\"Failed to fetch user profile:\", error);\n      }\n    });\n\n    const fetchUserProfile = async () => {\n      // Example of fetching user profile using Axios\n      const response = await axios.get(\"http://your-api-url/profile\", {\n        headers: {\n          Authorization: `Bearer ${authStore.token}`,\n        },\n      });\n      return response.data;\n    };\n\n    return {\n      authStore,\n      user,\n    };\n  },\n};\n</script>\n\n<style>\n/* CSS styling can be added here for additional customization */\n</style>\n"],"mappings":";gCAEIA,mBAAA,CAAgD;EAA5CC,KAAK,EAAC;AAAyB,GAAC,SAAO;;EACtCA,KAAK,EAAC;AAAoD;mBAHnE;;EAAAC,GAAA;AAAA;;EAWWD,KAAK,EAAC;AAAuB;;EAC7BA,KAAK,EAAC;AAAe;;uBAX9BE,mBAAA,CAcM,cAbJC,UAAgD,EAChDJ,mBAAA,CAWM,OAXNK,UAWM,GATIC,MAAA,CAAAC,IAAI,I,cADZJ,mBAAA,CAKE;IATRD,GAAA;IAMSM,GAAG,EAAEF,MAAA,CAAAC,IAAI,CAACE,SAAS;IACpBC,GAAG,EAAC,eAAe;IACnBT,KAAK,EAAC;0BARdU,UAAA,KAAAC,mBAAA,gBAUiBN,MAAA,CAAAC,IAAI,I,cAAfJ,mBAAA,CAGM,OAbZU,UAAA,GAWQb,mBAAA,CAA6D,KAA7Dc,UAA6D,EAAAC,gBAAA,CAAzBT,MAAA,CAAAU,SAAS,CAACC,QAAQ,kBACtDjB,mBAAA,CAA6C,KAA7CkB,UAA6C,EAAAH,gBAAA,CAAjBT,MAAA,CAAAC,IAAI,CAACY,KAAK,iB,KAZ9CP,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}